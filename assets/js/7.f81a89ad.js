(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{451:function(t,_,s){"use strict";s.r(_);var v=s(1),a=Object(v.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("都知道Https比Http安全，因为SSL，那么Https是怎样实现的更加安全呢？")]),t._v(" "),_("h1",{attrs:{id:"https加密的方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#https加密的方式"}},[t._v("#")]),t._v(" Https加密的方式")]),t._v(" "),_("h3",{attrs:{id:"_1-对称加密-×"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-对称加密-×"}},[t._v("#")]),t._v(" 1.对称加密（×）")]),t._v(" "),_("p",[t._v("话不多说，直接上图：")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://freessl.wosign.com/wp-content/uploads/2018/05/20180530163631.png",alt:""}})]),t._v(" "),_("p",[t._v("如图所示，这种双方拥有相同的密钥，信息能够安全传输的方式就是"),_("code",[t._v("对称加密")]),t._v("方式。但是仍然有两个缺点：")]),t._v(" "),_("ul",[_("li",[t._v("客户端和服务器的数量庞大，双方都需要维护大量的密钥，维护成本很高；")]),t._v(" "),_("li",[t._v("每个客户端、服务器的安全级别不同，密钥极易泄露。")])]),t._v(" "),_("h3",{attrs:{id:"_2-非对称加密-×"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-非对称加密-×"}},[t._v("#")]),t._v(" 2.非对称加密（×）")]),t._v(" "),_("p",[t._v("话不多说，再次上图")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://freessl.wosign.com/wp-content/uploads/2018/05/20180530163643.png",alt:""}})]),t._v(" "),_("p",[t._v("如图所示，客户端拥有公钥，服务器端拥有私钥，公钥可以解开私钥所加密的内容，而私钥可以解开公钥加密的内容，这样的加密方式叫做"),_("code",[t._v("非对称加密")]),t._v("。")]),t._v(" "),_("p",[t._v("但这样的方式仍然还是会有缺点：")]),t._v(" "),_("ul",[_("li",[t._v("公钥是公开的，公钥所有人都可以获取，那么黑客就可以拿公钥去解开私钥所加密的响应内容。")])]),t._v(" "),_("h3",{attrs:{id:"_3-混合加密-√"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-混合加密-√"}},[t._v("#")]),t._v(" 3.混合加密（√）")]),t._v(" "),_("p",[t._v("既然对称加密和非对称加密都不好使，那就取两者其精华，去两者其糟粕，采用"),_("code",[t._v("混合加密")]),t._v("的方式。")]),t._v(" "),_("p",[_("img",{attrs:{src:"https://freessl.wosign.com/wp-content/uploads/2018/05/20180530163657.png",alt:""}})]),t._v(" "),_("p",[t._v("如图所示，利用"),_("code",[t._v("非对称加密")]),t._v("的方式把"),_("code",[t._v("对称加密")]),t._v("的算法和密钥进行一个加密，也就是说最终通信用到的的是一个加密后的"),_("code",[t._v("对称加密")]),t._v("，这种方式叫做"),_("code",[t._v("混合加密")]),t._v("，也就是现在Https采用的通信方式。")]),t._v(" "),_("ul",[_("li",[t._v("只有服务器的私钥可以解开客户端利用公钥加密的对称加密算法和对称密钥；")]),t._v(" "),_("li",[t._v("得到对称密钥之后双方再建立对称密钥加密通信。")])]),t._v(" "),_("h3",{attrs:{id:"仍然存在的问题-客户端如何获取公钥"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#仍然存在的问题-客户端如何获取公钥"}},[t._v("#")]),t._v(" 仍然存在的问题：客户端如何获取公钥？")]),t._v(" "),_("p",[t._v("这就要用到终极武器："),_("code",[t._v("SSL证书")]),t._v("，也就是Https的核心。")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("首先，服务器端向CA（数字证书认证中心）申请一个"),_("code",[t._v("SSL证书")]),t._v("；")])]),t._v(" "),_("li",[_("p",[t._v("然后，服务器端发送"),_("code",[t._v("SSL证书")]),t._v("给客户端；包含证书的发布机构CA，有效期，公钥，数字签名等等；")])]),t._v(" "),_("li",[_("p",[t._v("客户端对SSL证书中的CA进行校验，校验成功用"),_("strong",[t._v("公钥解密出数字签名")]),t._v("，再利用相同的"),_("strong",[t._v("哈希算法")]),t._v("计算出数字签名是否正确；")])]),t._v(" "),_("li",[_("p",[t._v("经过比对和算法计算出不是冒充的，说明证书合法，则将公钥用于后续的加密。")])])]),t._v(" "),_("h3",{attrs:{id:"知识拓展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#知识拓展"}},[t._v("#")]),t._v(" 知识拓展")]),t._v(" "),_("h4",{attrs:{id:"对称加密的算法-aes-des-snow"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对称加密的算法-aes-des-snow"}},[t._v("#")]),t._v(" 对称加密的算法：AES，DES，SNOW")]),t._v(" "),_("h4",{attrs:{id:"非对称加密的算法-rsa算法-椭圆曲线加密"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#非对称加密的算法-rsa算法-椭圆曲线加密"}},[t._v("#")]),t._v(" 非对称加密的算法："),_("strong",[t._v("RSA算法")]),t._v("，椭圆曲线加密")])])}),[],!1,null,null,null);_.default=a.exports}}]);